{
  "name": "fastgpio",
  "version": "0.0.3",
  "description": "a nodejs gpio library for the raspberry pi using the fastest way to export values",
  "main": "build/Release/fastgpio.node",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1",
    "install": "node-gyp rebuild"
  },
  "homepage": "https://github.com/fjw/node-fastgpio",
  "repository": {
    "type": "git",
    "url": "https://github.com/fjw/node-fastgpio.git"
  },
  "keywords": [
    "node",
    "nodejs",
    "raspberry",
    "pi",
    "raspberry",
    "gpio"
  ],
  "author": {
    "name": "Frédéric Worm"
  },
  "license": "MIT",
  "readmeFilename": "README.md",
  "gitHead": "b8c1dd0c99233afe23ebd06bfec5eca7b1057977",
  "gypfile": true,
  "readme": "node-fastgpio\n==============\n\nThis is a small **node.js** GPIO library for the **Raspberry Pi** using the fastest way to export values via C (http://codeandlife.com/2012/07/03/benchmarking-raspberry-pi-gpio-speed/).\n\n\nInstallation:\n\n```sh\nnpm install fastgpio\n```\n\nIn your node.js file just require the library:\n```js\nvar fastgpio = require( \"fastgpio\" );\n```\n\nNow you can prepare your GPIO for output using:\n```js\nfastgpio.prepareGPIO(18);\n```\n\nAfter that you can set your GPIO to HIGH (turn on) anytime with:\n```js\nfastgpio.set(18);\n```\n\nOr you can set your GPIO to LOW (turn off) anytime with:\n```js\nfastgpio.unset(18);\n```\n\nThe library only supports GPIOs as output, but in the fastest possible way from node.js.\n**It uses the standard Raspberry Pi GPIO numbers.**",
  "_id": "fastgpio@0.0.3",
  "dist": {
    "shasum": "3cd2955a4f4e212be4beaabdb052f83d290b5fe0"
  },
  "_from": "fastgpio@",
  "_resolved": "https://registry.npmjs.org/fastgpio/-/fastgpio-0.0.3.tgz"
}
